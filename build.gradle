// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlinVersion = '1.3.72'
    ext.kotlinxSerializationVersion = '0.20.0'
    ext.detektGradlePluginVersion = '1.2.0'
    ext.gradleVersionsPlugin = '0.27.0'
    ext.kotlinpoetVersion = '1.4.4'
    ext.fuelVersion = '2.2.3'
    ext.spekVersion = '2.0.11'
    ext.okio = '2.6.0'
    ext.mockwebserver = '4.7.2'

    repositories {
        maven { url "https://kotlin.bintray.com/kotlinx" }
        google()
        jcenter()
        maven { url "https://jitpack.io" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlinVersion"
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detektGradlePluginVersion"
        classpath "com.github.ben-manes:gradle-versions-plugin:$gradleVersionsPlugin"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id "io.gitlab.arturbosch.detekt" version '1.2.0'
    id "org.sonarqube" version "3.0"
}

apply plugin: 'io.gitlab.arturbosch.detekt'

System.setProperty( "user.dir", project.projectDir.toString())

allprojects {
    apply plugin: 'jacoco'

    repositories {
        google()
        jcenter()
        maven { url "https://kotlin.bintray.com/kotlinx" }
        maven { url "https://jitpack.io" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    
    configurations.all {
        resolutionStrategy {
            force "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
        }
    }
}

jacoco {
    toolVersion = "0.8.3"
    reportsDir = file("$buildDir/reports")
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

detekt {
    toolVersion = detektGradlePluginVersion
    config = files("${project.rootDir}/detekt/detekt-config.yml")
    //baseline = file("${project.rootDir}/detekt/baseline.xml")
    input = files(
            "${project.rootDir}/api/src/main/kotlin",
            "${project.rootDir}/processor/src/main/kotlin",
            "${project.rootDir}/api/src/test/kotlin",
            "${project.rootDir}/processor/test/main/kotlin",
            "${project.rootDir}/processor-coroutines/src/main/kotlin"
    )
    filters = ".*/resources/.*,.*/build/.*"
    reports {
        html {
            enabled = true
            destination = file("${project.rootDir}/detekt/reports/detekt.html")
        }
    }
    parallel = true
    debug = false
}

dependencies {
    detekt "io.gitlab.arturbosch.detekt:detekt-formatting:$detektGradlePluginVersion"
    detekt "io.gitlab.arturbosch.detekt:detekt-cli:$detektGradlePluginVersion"
}

sonarqube {
  properties {
    property "sonar.projectKey", "alexxxdev_fuel-comfy"
  }
}
